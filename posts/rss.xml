<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>See also:</title>
    <description>See also:</description>
    <link/>
    <pubDate>2015-04-14</pubDate>
    <item>
      <title>"Vortex of mediocrity"</title>
      <link>/weblog/posts/2014-02-27-post</link>
      <pubDate>2014-02-27</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;When working with legacy code, giving up means neither replacing nor rescuing the legacy code, but simply living with it, learning to adjust my expectations to its quirky behavior, figuring out how to get it mostly out of my way, but with one considerable downside: when push comes to shove, I can&#x2019;t change it, so I have to waste time and effort working around it, rather than making it better. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://www.jbrains.ca/permalink/brewing-espresso-and-legacy-code"&gt;J.B. Rainsberger&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>goto fail</title>
      <link>/weblog/posts/2014-02-22-post</link>
      <pubDate>2014-02-22</pubDate>
      <description>&lt;p&gt;&lt;a href="http://www.theregister.co.uk/2014/02/21/apple_patches_ios_ssl_vulnerability/"&gt;http://www.theregister.co.uk/2014/02/21/apple_patches_ios_ssl_vulnerability/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>RIP</title>
      <link>/weblog/posts/2014-02-20-post</link>
      <pubDate>2014-02-20</pubDate>
      <description>&lt;p&gt;Thanks for everything, Jim.&lt;/p&gt;

&lt;iframe width="640" height="390" src="https://www.youtube.com/embed/vKrr7aXUc1E" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://github.com/jimweirich/wyriki/commit/d28fac7f18aeacb00d8ad3460a0a5a901617c2d4"&gt;github&lt;/a&gt;
&lt;a href="https://twitter.com/search?q=jimweirich"&gt;twitter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hobbies</title>
      <link>/weblog/posts/2014-02-19-post</link>
      <pubDate>2014-02-19</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;A geek must possess just two things: knowledge and enthusiasm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://hypercritical.co/2014/01/14/the-road-to-geekdom"&gt;John Siracusa&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Data injection vulnerability in ActiveRecord</title>
      <link>/weblog/posts/2014-02-18-post2</link>
      <pubDate>2014-02-18</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;There is a data injection vulnerability in Active Record.  Specially crafted strings can be used to save data in PostgreSQL array columns that may not be intended. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://groups.google.com/forum/m/#!topic/rubyonrails-security/Wu96YkTUR6s"&gt;Aaron Patterson&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>"Bizarre Shadowy Paper-Based Payment System Being Rolled Out Worldwide"</title>
      <link>/weblog/posts/2014-02-18-post</link>
      <pubDate>2014-02-18</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;you can&amp;#39;t snort cocaine through a bitcoin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(&lt;a href="http://ledracapital.com/blog/2014/2/17/bitcoin-series-19-bizarre-shadowy-paper-based-payment-system-being-rolled-out-worldwide"&gt;comments&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>WNPP</title>
      <link>/weblog/posts/2014-02-15-post</link>
      <pubDate>2014-02-15</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;how-can-i-help&lt;/code&gt; program hooks into APT to list opportunities for contributions to Debian&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://wiki.debian.org/how-can-i-help"&gt;https://wiki.debian.org/how-can-i-help&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>"The Billion Dollar Mistake"</title>
      <link>/weblog/posts/2014-02-09-post</link>
      <pubDate>2014-02-09</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tony Hoare, &lt;a href="http://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare"&gt;&lt;em&gt;Null References: The Billion Dollar Mistake&lt;/em&gt;&lt;/a&gt;, QCon London 2009&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Priorities</title>
      <link>/weblog/posts/2014-02-06-post2</link>
      <pubDate>2014-02-06</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;The first step is to know what the hell we&amp;#39;re doing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://learnyousomeerlang.com/designing-a-concurrent-application#understanding-the-problem"&gt;Fred H&#xE9;bert&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>private static final sealed cursed</title>
      <link>/weblog/posts/2014-02-06-post3</link>
      <pubDate>2014-02-06</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;You don&#x2019;t really hate global state until you&#x2019;ve had to &lt;code&gt;grep&lt;/code&gt; a million lines of code at three in the morning trying to find the one errant call that&#x2019;s setting a static variable to the wrong value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bob Nystrom, &lt;a href="http://gameprogrammingpatterns.com/singleton.html"&gt;&lt;em&gt;Game Programming Patterns&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Culture</title>
      <link>/weblog/posts/2014-02-06-post</link>
      <pubDate>2014-02-06</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;The only problem with Microsoft is they just have no taste.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=mOgOP_aqqtg"&gt;Steve Jobs&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>"Big changes to Erlang"</title>
      <link>/weblog/posts/2014-02-01-post</link>
      <pubDate>2014-02-01</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;Records are dead - long live maps !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://joearms.github.io/2014/02/01/big-changes-to-erlang.html"&gt;Joe Armstrong&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Professionalism</title>
      <link>/weblog/posts/2014-01-25-post</link>
      <pubDate>2014-01-25</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;Professionalism is the willingness to refuse to obey orders that do harm to others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://blog.8thlight.com/uncle-bob/2013/11/12/Healthcare-gov.html"&gt;Robert Martin&lt;/a&gt;, via &lt;a href="http://podcasts.thoughtbot.com/giantrobots/79"&gt;Ben Orenstein&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Labor theory of value</title>
      <link>/weblog/posts/2014-01-24-post</link>
      <pubDate>2014-01-24</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;Effort equates neither to speed nor direction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://blog.8thlight.com/uncle-bob/2013/03/05/TheStartUpTrap.html"&gt;Robert Martin&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Paradigms</title>
      <link>/weblog/posts/2014-01-22-post</link>
      <pubDate>2014-01-22</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;I started wondering about what object-oriented programming was, and I thought, well, Erlang wasn&amp;#39;t object-oriented; it was a functional programming language.  And then my thesis supervisor, Seif Haridi said, &amp;quot;But you&amp;#39;re wrong.  Erlang&amp;#39;s extremely object-oriented.  The thing is, the object-oriented languages aren&amp;#39;t object-oriented.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://www.infoq.com/interviews/johnson-armstrong-oop"&gt;Joe Armstrong&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OOP = messaging + isolation + polymorphism + late binding and NOT classes + methods (which is just code organisation)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(&lt;a href="https://twitter.com/joeerl/status/420304646184267776"&gt;twitter&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Freedom of choice</title>
      <link>/weblog/posts/2014-01-12-post</link>
      <pubDate>2014-01-12</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;I believe freedom is equal to freedom to choose, freedom of choice.  Choice means decision.  Decision making is the source of freedom.  So be a decision-maker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yukihiro Matsumoto, &lt;a href="https://www.youtube.com/watch?v=6vdum5aXew8"&gt;&lt;em&gt;Changing Your World&lt;/em&gt;&lt;/a&gt;, Barcelona Ruby Conference 2013&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Stop laughing.</title>
      <link>/weblog/posts/2014-01-11-post</link>
      <pubDate>2014-01-11</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;Bing now supports https&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(&lt;a href="https://news.ycombinator.com/item?id=7043536"&gt;HN&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>"Test infected" (2003)</title>
      <link>/weblog/posts/2014-01-10-post2</link>
      <pubDate>2014-01-10</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;Will we all be programming in a dynamically typed language in 2010?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://www.artima.com/forums/flat.jsp?forum=106&amp;amp;thread=4639&amp;amp;start=0&amp;amp;msRange=15"&gt;Robert Martin&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Methods without Contracts (2003)</title>
      <link>/weblog/posts/2014-01-10-post</link>
      <pubDate>2014-01-10</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;The flexibility to change the implementation without changing the interface works well only for certain things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://www.artima.com/intv/pycontract.html"&gt;Guido van Rossum&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>"Career-shatteringly bad mistake"</title>
      <link>/weblog/posts/2014-01-07-post</link>
      <pubDate>2014-01-07</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;What I really wanted to do at the time was use Lisp, actually, but I didn&amp;#39;t say it. And [Alan] goes, &amp;quot;Well!&amp;quot; He says, &amp;quot;Well... how would you feel if there was a team out there who said they were gonna use... LISP!&amp;quot; 
&lt;br&gt;&lt;br&gt;
He&amp;#39;d pulled his ace out, and he brandished it at me, and I went: &amp;quot;That&amp;#39;s what I wanted to use.&amp;quot; And he goes, &amp;quot;Oh.&amp;quot;  And that was the end of the conversation. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Steve Yegge, &lt;a href="http://youtu.be/tz-Bb-D6teE?t=18m31s"&gt;&lt;em&gt;Dynamic Languages Strike Back&lt;/em&gt;&lt;/a&gt;, Stanford University Computer Systems Colloquium, 2008&lt;/p&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;Emacs is the world&amp;#39;s last Lisp Machine. All the rest of them are at garage sales. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(Q&amp;amp;A)&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
